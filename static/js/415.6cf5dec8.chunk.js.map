{"version":3,"file":"static/js/415.6cf5dec8.chunk.js","mappings":"kNAGaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sOAaTE,EAAYF,EAAAA,GAAAA,GAAH,wDAGTG,EAAeH,EAAAA,GAAAA,GAAH,mIAOZI,EAAQJ,EAAAA,GAAAA,IAAH,yCAGLK,EAAQL,EAAAA,GAAAA,IAAH,8H,4BCxBLM,EAAY,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACrBC,GAAWC,EAAAA,EAAAA,MACXC,EAAgC,MAAtBF,EAASG,SAAmB,WAAa,GAErD,GAAIJ,EACJ,OAAO,+BAAE,SAACJ,EAAD,UACJI,EAAKK,QAAQC,KAAI,YAA6C,IAA3CC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,YAAaC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,aACtCC,EAAOD,EAAeA,EAAaE,MAAM,EAAG,GAAI,KACtD,OAAO,SAACjB,EAAD,WAAsB,UAACH,EAAD,CAC7BqB,GAAE,UAAKV,GAAL,OAAeI,GACjBO,MAAQ,CAACC,KAAMd,GAFc,WAGzB,SAACJ,EAAD,CAAOmB,IAAO,oCAAsCR,GAA4BS,GAAcC,IAAI,eAAeC,MAAM,MAAMC,OAAO,SACpI,UAACtB,EAAD,YAAO,0BAAOW,KAAa,0BAAOE,WAJbJ,EAI0D,OAI1F,C,sECnBYc,E,QAAY5B,GAAAA,GAAH,kG,SCAT6B,EAAQ,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACnB,OAAS,SAACF,EAAD,UAAYE,GACxB,C,8HCDDC,IAAAA,SAAAA,QAAwB,+BACxB,IAAMC,EAAgB,CAClBC,OAAQ,CACJC,QAJQ,mCAKRC,SAAU,UAILC,EAAO,mCAAG,WAAOC,EAAKJ,GAAZ,IACVK,EADU,0EACVA,EADU,WAEX,OAAQD,GACZ,IAAK,WACD,MAAM,GAAN,OAAUA,EAAV,kBAAuBJ,GAC3B,IAAK,SACD,MAAM,GAAN,OAAUI,EAAV,wBAA6BJ,GACjC,IAAK,UAEL,IAAK,UACD,MAAM,SAAN,OAAgBA,EAAhB,YAA0BI,GAC9B,QACI,MAAM,SAAN,OAAgBJ,GAE3B,EAdsB,kBAiBIF,IAAAA,IAAUO,IAAeN,GAjB7B,cAiBbO,EAjBa,yBAkBZA,EAAShC,MAlBG,sCAmBA,KAAMiC,QAnBN,yDAAH,wDCRPC,EAAa,SAACJ,EAAKC,GAC5B,OAAwBI,EAAAA,EAAAA,UAAS,MAAjC,eAAOnC,EAAP,KAAaoC,EAAb,KAMA,OALAC,EAAAA,EAAAA,YAAU,WACLN,GACDF,EAAQC,EAAKC,GACZO,KAAKF,EACT,GAAE,CAACN,EAAKC,IACF,CAAC/B,EAAMoC,EACjB,C,2FCKD,UAXa,WACb,IAEA,GAAeF,EAAAA,EAAAA,GADH,WADU,OAEflC,GAAP,eAEI,OACA,UAAC,IAAD,YACI,SAAC,IAAD,CAAOuB,KAAO,oBACd,SAAC,IAAD,CAAYvB,KAAMA,MAEzB,C,qECbYuC,E,QAAU9C,GAAAA,QAAH,qL","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","helpers/getData.jsx","helpers/useGetData.jsx","pages/Home.jsx","pages/common.styled.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const MovieLink = styled(Link)`\ndisplay: flex;\nflex-direction: column;\nwidth: 270px;\ntext-decoration: none;\ncolor: black;\nfont-weight: 500;\nbackground-color: lightgrey;\nheight: 100%;\n&:not(:last-child) {\nmargin-bottom: 15px;\n}\n`\nexport const ShadowBox = styled.li`\nbox-shadow: 3px 3px 3px black;\n`\nexport const MovieLinkBox = styled.ul`\npadding: 20px 0;\ndisplay: flex;\ngap: 40px;\nflex-wrap: wrap;\nflex-basis: calc((100% - (3 * 40 )) / 4);\n`\nexport const Image = styled.img`\ndisplay: block;\n`\nexport const Thumb = styled.div`\npadding: 10px;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nflex-grow: 1;\n`","import { MovieLink, MovieLinkBox, Image, Thumb, ShadowBox} from \"./MovieList.styled\";\nimport { useLocation } from \"react-router-dom\";\nimport Placeholder from \"../../placeholders/placeholder_for_movie.jpg\";\nimport PropTypes from \"prop-types\";\n\nexport const MovieList = ({data}) => {\nconst location = useLocation()\nconst pathVar = location.pathname === \"/\" ? \"/movies/\" : \"\";\n\n    if(!data) return\n    return <><MovieLinkBox>\n        {data.results.map(({id, poster_path, title, release_date}) => {\n        const year = release_date ? release_date.slice(0, 4): null;\n        return <ShadowBox key = {id}><MovieLink \n        to={`${pathVar}${id}`} \n        state ={{from: location}}>\n            <Image src = {\"https://image.tmdb.org/t/p/w500/\" + (poster_path ? poster_path : Placeholder)} alt=\"movie poster\" width=\"270\" height=\"405\"/>\n            <Thumb><span>{title}</span><span>{year}</span></Thumb></MovieLink></ShadowBox>}\n        )}\n    </MovieLinkBox>\n    </>\n}\n\nMovieList.propTypes = {\n    data: PropTypes.shape({\n        results: PropTypes.arrayOf( PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            poster_path: PropTypes.string.isRequired,\n            title: PropTypes.string.isRequired,\n            release_date: PropTypes.string.isRequired,\n        }).isRequired\n        ).isRequired\n    })\n}","import styled from \"styled-components\";\n\nexport const TextTitle = styled.h1`\ntext-align: center;\npadding: 20px;\ntext-shadow: 3px 3px 3px lightgrey;\n`","import { TextTitle } from \"./Title.styled\"\nimport PropTypes from 'prop-types'\nexport const Title = ({text}) => {\n    return ( <TextTitle>{text}</TextTitle>)\n}\n\nTitle.propTypes = {\n    text: PropTypes.string.isRequired\n}","import axios from \"axios\";\n\nconst API_KEY = \"4e997d9f74601693c84e243277b61d66\";\naxios.defaults.baseURL =\"https://api.themoviedb.org/3\";\nconst requestConfig = {\n    params: {\n        api_key: API_KEY,\n        language: \"en-US\",\n    },\n};\n\nexport const getData = async (key, params) => {\n    function queryParams () { \n            switch (key) {\n        case \"trending\": \n            return `${key}/movie/${params}`;\n        case \"search\": \n            return `${key}/movie?query=${params}`;\n        case \"credits\": \n            return `movie/${params}/${key}`;\n        case \"reviews\": \n            return `movie/${params}/${key}`;\n        default:\n            return `movie/${params}`\n    }\n}\n\ntry {\n    const response = await axios.get(queryParams(), requestConfig);\n    return response.data\n} catch(error) { throw error.message}\n}\n\n    \n\n\n\n","import { useState, useEffect } from \"react\";\nimport { getData } from \"./getData\";\n\nexport const useGetData = (key, queryParams) => {\n    const [data, setData] = useState(null);\n    useEffect(()=>{\n    if (!queryParams) return\n        getData(key, queryParams)\n        .then(setData);\n    }, [key, queryParams])\n    return [data, setData]\n}\n\n\n","import { useGetData } from \"helpers/useGetData\";\nimport { MovieList } from \"components/MovieList/MovieList\";\nimport { Title } from \"components/Title/Title\";\nimport { Section } from \"./common.styled\";\n\nconst Home = () => {\nconst requestPeriod = \"day\";\nconst key = \"trending\";\nconst [data] = useGetData(key, requestPeriod)\n\n    return(\n    <Section>\n        <Title text ={\"Trending movie\"}/>\n        <MovieList  data={data}/>\n    </Section>)\n};\nexport default Home;","import styled from \"styled-components\";\n\nexport const Section = styled.section`\n    width: 1200px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 20px 15px;\n background-color: white;\n box-shadow: 0px 0px 3px 3px black;\n`"],"names":["MovieLink","styled","Link","ShadowBox","MovieLinkBox","Image","Thumb","MovieList","data","location","useLocation","pathVar","pathname","results","map","id","poster_path","title","release_date","year","slice","to","state","from","src","Placeholder","alt","width","height","TextTitle","Title","text","axios","requestConfig","params","api_key","language","getData","key","queryParams","response","message","useGetData","useState","setData","useEffect","then","Section"],"sourceRoot":""}