{"version":3,"file":"static/js/378.10faff14.chunk.js","mappings":"8OAGAA,IAAAA,SAAAA,QAAwB,+BAExB,IAAMC,EAAgB,CAClBC,OAAQ,CACJC,QALQ,mCAMRC,SAAU,UAILC,EAAO,mCAAG,WAAOC,EAAKJ,GAAZ,IAEVK,EAFU,0EAEVA,EAFU,WAGX,OAAQD,GACZ,IAAK,WACD,MAAM,GAAN,OAAUA,EAAV,kBAAuBJ,GAC3B,IAAK,SACD,MAAM,GAAN,OAAUI,EAAV,wBAA6BJ,GACjC,IAAK,UAEL,IAAK,UACD,MAAM,SAAN,OAAgBA,EAAhB,YAA0BI,GAE9B,QACI,MAAM,SAAN,OAAgBJ,GAG3B,EAjBsB,kBAmBIF,IAAAA,IAAUO,IAAeN,GAnB7B,cAmBbO,EAnBa,yBAoBZA,EAASC,MApBG,yDAqBC,KAAMC,SArBP,yDAAH,wDCTPC,EAAa,SAACL,EAAKC,GAC5B,OAAwBK,EAAAA,EAAAA,UAAS,MAAjC,eAAOH,EAAP,KAAaI,EAAb,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACLP,GACDF,EAAQC,EAAKC,GACZQ,KAAKF,EAET,GAAE,CAACP,EAAKC,IACF,CAACE,EAAMI,EACjB,C,+HCXYG,EAAaC,EAAAA,GAAAA,IAAH,wCAkBVC,GAdSD,EAAAA,GAAAA,OAAH,wFAMOA,EAAAA,GAAAA,IAAH,mHAQEA,EAAAA,GAAAA,EAAH,8D,mBCnBTE,EAAe,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAC1B,OAAO,SAAC,KAAD,CAAMC,GAAID,EAAV,oBACV,ECDYE,EAAgB,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAC3B,OACA,4BACI,oDACA,SAAC,KAAD,CAAMF,GAAG,OAAOE,MAAQA,EAAxB,mBACA,SAAC,KAAD,CAAMF,GAAG,UAAUE,MAAQA,EAA3B,uBAGP,E,UCRYC,EAAa,SAAC,GAAY,IAAXf,EAAU,EAAVA,KACjBgB,EAAsDhB,EAAtDgB,YAAaC,EAAyCjB,EAAzCiB,MAAOC,EAAkClB,EAAlCkB,aAAcC,EAAoBnB,EAApBmB,SAAUC,EAAUpB,EAAVoB,OAEnD,OACA,4BACI,gBAAKC,IAAK,oCAAsCL,GAA4BM,GAAcC,IAAI,eAAeC,MAAO,MAAMC,OAAO,SACjI,4BACI,wBAAKR,KACL,wCAAgBS,KAAKC,MAAoB,GAAdT,GAAoB,QAC/C,SAACT,EAAD,wBACA,uBAAIU,KACJ,SAACV,EAAD,sBACA,uBAAIW,EAAOQ,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,YAGlD,ECaD,EAtBqB,WAAO,IAAD,IAEpBC,GAAWC,EAAAA,EAAAA,MAAXD,QACDE,GAAWC,EAAAA,EAAAA,MAEjB,GAAejC,EAAAA,EAAAA,GADH,KACmB8B,GAAxBhC,GAAP,eAEMW,EAAa,UAAAuB,EAASpB,aAAT,SAAgBsB,KAAOF,EAASpB,MAAMsB,KAAO,UAGhE,GAFAC,QAAQC,IAAItC,GAERA,EAEA,OACI,UAACO,EAAD,YACI,SAACG,EAAD,CAAcC,WAAYA,KAC1B,SAAC,EAAD,CAAYX,KAAMA,KAClB,SAACa,EAAD,CAAeC,MAAO,CAACsB,KAAI,UAAEF,EAASpB,aAAX,aAAE,EAAgBsB,SAC7C,SAAC,KAAD,CAAQG,QAASP,MAG5B,C","sources":["helpers/getData.jsx","helpers/useGetData.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/GoBackButton/GoBackButton.jsx","components/AdditionalBox/AdditionalBox.jsx","components/DetailsBox/DetailsBox.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = \"4e997d9f74601693c84e243277b61d66\";\naxios.defaults.baseURL =\"https://api.themoviedb.org/3\";\n\nconst requestConfig = {\n    params: {\n        api_key: API_KEY,\n        language: \"en-US\",\n    },\n};\n\nexport const getData = async (key, params) => {\n\n    function queryParams () { \n            switch (key) {\n        case \"trending\": \n            return `${key}/movie/${params}`;\n        case \"search\": \n            return `${key}/movie?query=${params}`;\n        case \"credits\": \n            return `movie/${params}/${key}`;\n        case \"reviews\": \n            return `movie/${params}/${key}`;\n            \n        default:\n            return `movie/${params}`\n       \n    }\n}\ntry {\n    const response = await axios.get(queryParams(), requestConfig);\n    return response.data\n} catch(error) { return error.message}\n   \n \n}\n\n    \n\n\n\n","import { useState, useEffect } from \"react\";\nimport { getData } from \"./getData\";\n\nexport const useGetData = (key, queryParams) => {\n    const [data, setData] = useState(null);\n    \n    useEffect(()=>{\n    if (!queryParams) return\n        getData(key, queryParams)\n        .then(setData);\n    \n    }, [key, queryParams])\n    return [data, setData]\n}\n\n\n","import styled from \"styled-components\";\n\nexport const PrimaryBox = styled.div`\npadding: 20px;\n`\n\nexport const Button = styled.button`\n    width: 140px;\n    height: 30px;\n    margin-bottom: 20px;\n`\n\nexport const DetailsBox = styled.div`\npadding: 20px;\ndisplay: flex;\nalign-items: center;\njustify-content: start;\ngap: 20px;\n`\n\nexport const TextTitle = styled.p`\nfont-weight: 700;\nfont-size: 20px;\n`","import { Link } from \"react-router-dom\"\nexport const GoBackButton = ({pathButton}) => {\n    return <Link to={pathButton}>Go back</Link>\n} ","import { Link } from \"react-router-dom\"\n\nexport const AdditionalBox = ({state}) => {\n    return (     \n    <div>       \n        <h2>Additional information</h2>\n        <Link to=\"cast\" state ={state}>Cast</Link>\n        <Link to=\"reviews\" state ={state}>Reviews</Link>\n    </div>\n    )\n}","import Placeholder from \"../../placeholders/placeholder_for_movie.jpg\"\nimport { TextTitle } from \"components/MovieDetails/MovieDetails.styled\"\nexport const DetailsBox = ({data}) => {\n    const {poster_path, title, vote_average, overview, genres} = data;\n\n    return (\n    <div>\n        <img src={\"https://image.tmdb.org/t/p/w500/\" + (poster_path ? poster_path : Placeholder)} alt=\"movie poster\" width =\"200\" height=\"300\" />\n        <div>\n            <h1>{title}</h1>\n            <p>User score: {Math.round(vote_average *10) + \"%\"}</p>\n            <TextTitle>Overview</TextTitle>\n            <p>{overview}</p>\n            <TextTitle>Genres</TextTitle>\n            <p>{genres.map(item => item.name).join(\",\")}</p>\n        </div>\n    </div>)\n}\n\n","import { useGetData } from \"helpers/useGetData\";\nimport { useParams, useLocation, Outlet } from \"react-router-dom\";\nimport {PrimaryBox } from \"../components/MovieDetails/MovieDetails.styled\";\n\nimport { GoBackButton } from \"components/GoBackButton/GoBackButton\";\nimport { AdditionalBox } from \"components/AdditionalBox/AdditionalBox\";\nimport { DetailsBox } from \"components/DetailsBox/DetailsBox\";\n\nconst MovieDetails = () => {\n\nconst {movieId} = useParams();\nconst location = useLocation();\nconst key = null;\nconst [data] = useGetData(key, movieId)\n\nconst pathButton = location.state?.from ? location.state.from : \"/movies\";\nconsole.log(data)\n\nif(!data) return;\n\n    return  (\n        <PrimaryBox>\n            <GoBackButton pathButton={pathButton}/>\n            <DetailsBox data={data}/>\n            <AdditionalBox state={{from: location.state?.from}}/>\n            <Outlet context={movieId}/>\n        </PrimaryBox>)\n\n}\n\nexport default MovieDetails;"],"names":["axios","requestConfig","params","api_key","language","getData","key","queryParams","response","data","message","useGetData","useState","setData","useEffect","then","PrimaryBox","styled","TextTitle","GoBackButton","pathButton","to","AdditionalBox","state","DetailsBox","poster_path","title","vote_average","overview","genres","src","Placeholder","alt","width","height","Math","round","map","item","name","join","movieId","useParams","location","useLocation","from","console","log","context"],"sourceRoot":""}