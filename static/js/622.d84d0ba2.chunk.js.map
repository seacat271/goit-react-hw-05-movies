{"version":3,"file":"static/js/622.d84d0ba2.chunk.js","mappings":"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","sources":["components/Title/Title.styled.jsx","components/Title/Title.jsx","helpers/getData.jsx","helpers/useGetData.jsx","components/DetailsBox/DetailsBox.styled.jsx","components/GoBackButton/GoBackButton.styled.jsx","components/GoBackButton/GoBackButton.jsx","components/DetailsBox/DetailsBox.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const TextTitle = styled.h1`\ntext-align: center;\npadding: 20px;\ntext-shadow: 3px 3px 3px lightgrey;\n`","import { TextTitle } from \"./Title.styled\"\nimport PropTypes from 'prop-types'\nexport const Title = ({text}) => {\n    return ( <TextTitle>{text}</TextTitle>)\n}\n\nTitle.propTypes = {\n    text: PropTypes.string.isRequired\n}","import axios from \"axios\";\n\nconst API_KEY = \"4e997d9f74601693c84e243277b61d66\";\naxios.defaults.baseURL =\"https://api.themoviedb.org/3\";\nconst requestConfig = {\n    params: {\n        api_key: API_KEY,\n        language: \"en-US\",\n    },\n};\n\nexport const getData = async (key, params) => {\n    function queryParams () { \n            switch (key) {\n        case \"trending\": \n            return `${key}/movie/${params}`;\n        case \"search\": \n            return `${key}/movie?query=${params}`;\n        case \"credits\": \n            return `movie/${params}/${key}`;\n        case \"reviews\": \n            return `movie/${params}/${key}`;\n        default:\n            return `movie/${params}`\n    }\n}\n\ntry {\n    const response = await axios.get(queryParams(), requestConfig);\n    return response.data\n} catch(error) { throw error.message}\n}\n\n    \n\n\n\n","import { useState, useEffect } from \"react\";\nimport { getData } from \"./getData\";\n\nexport const useGetData = (key, queryParams) => {\n    const [data, setData] = useState(null);\n    useEffect(()=>{\n    if (!queryParams) return\n        getData(key, queryParams)\n        .then(setData);\n    }, [key, queryParams])\n    return [data, setData]\n}\n\n\n","import styled from \"styled-components\";\n\nexport const PrimaryBox = styled.div`\n width: 1200px;\nmargin-left: auto;\nmargin-right: auto;\npadding: 20px 15px;\n background-color: white;\n box-shadow: 0px 0px 3px 3px black;\n`\nexport const SecondaryBox = styled.div`\npadding: 20px;\ndisplay: flex;\nalign-items: center;\njustify-content: start;\ngap: 20px;\n`\nexport const Thumb = styled.div`\nbox-sizing: border-box;\ndisplay: flex;\nflex-direction: column;\nheight: 600px;\npadding: 20px;\n`\nexport const TextTitle = styled.p`\nfont-weight: 700;\nfont-size: 20px;\n`\nexport const ThumbBox = styled.div`\nflex-basis: 50%;\nmargin-bottom: 20px;\n`\nexport const AdditionalBox = styled.div`\nflex-basis: 50%;\n`","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Button = styled(Link)`\nwidth: 100px;\nheight: 40px;\npadding: 0;\nborder: 3px solid black;\ndisplay: flex;\ntext-decoration: none;\npadding-top: auto;\npadding-bottom: auto;\nalign-items: center;\njustify-content: center;\nfont-weight: 500;\nfont-size: 20px;\ncolor: black;\nbackground-color: white;\ntransition: 250ms color linear, 250ms background-color linear, 250ms box-shadow linear, 50ms text-shadow linear;\nbox-shadow: 3px 3px 3px black;\ntext-shadow: 3px 3px 3px lightgrey;\n&:hover,\n&:focus {\n    color: white;\n    background-color: black;\n    box-shadow: none;\n    text-shadow: none;\n}\n`\n","import {Button} from \"./GoBackButton.styled\";\nimport PropTypes from 'prop-types'\nexport const GoBackButton = ({pathButton}) => {\n    return <Button to={pathButton}>Go back</Button>\n} \n\nGoBackButton.propTypes = {\n    pathButton: PropTypes.object.isRequired,\n}","import { Button } from \"components/GoBackButton/GoBackButton.styled\";\nimport Placeholder from \"../../placeholders/placeholder_for_movie.jpg\"\nimport { TextTitle, SecondaryBox, Thumb, ThumbBox, AdditionalBox } from \"./DetailsBox.styled\"\nimport { Title } from \"components/Title/Title\";\nimport PropTypes from \"prop-types\";\n\nexport const DetailsBox = ({data, state}) => {\n    const {poster_path, title, vote_average, overview, genres} = data;\n    return (\n    <SecondaryBox>\n        <img src={\"https://image.tmdb.org/t/p/w500/\" + (poster_path ? poster_path : Placeholder)} alt=\"movie poster\" width =\"400\" height=\"600\" />\n        <Thumb>\n        <ThumbBox>\n            <Title text= {title}></Title>\n            <p style={{marginBottom: \"20px\",}}>User score: {Math.round(vote_average *10) + \"%\"}</p>\n            <TextTitle>Overview</TextTitle>\n            <p style={{marginBottom: \"20px\",}}>{overview}</p>\n            <TextTitle>Genres</TextTitle>\n            <p> {genres.map(item => item.name).join(\", \")}</p>\n        </ThumbBox>\n        <AdditionalBox>       \n        <h2 style={{marginBottom: \"20px\",}}>Additional information</h2>\n        <Button to=\"cast\" state ={state} style={{marginBottom: \"20px\",}}>Cast</Button>\n        <Button to=\"reviews\" state ={state}>Reviews</Button>\n        </AdditionalBox>\n        </Thumb>\n    </SecondaryBox>)\n}\n\nDetailsBox.propTypes = {\n    state: PropTypes.object.isRequired,\n    data: PropTypes.shape({\n        vote_average: PropTypes.number.isRequired,\n        poster_path: PropTypes.string.isRequired,\n        title: PropTypes.string.isRequired,\n        overview: PropTypes.string.isRequired,\n        genres: PropTypes.arrayOf(PropTypes.shape({\n            name: PropTypes.string.isRequired,\n        })).isRequired,\n    })\n}\n","import { useGetData } from \"helpers/useGetData\";\nimport { useParams, useLocation, Outlet } from \"react-router-dom\";\nimport {PrimaryBox } from \"../components/DetailsBox/DetailsBox.styled\";\nimport { GoBackButton } from \"components/GoBackButton/GoBackButton\";\nimport { DetailsBox } from \"components/DetailsBox/DetailsBox\";\n\nconst MovieDetails = () => {\nconst {movieId} = useParams();\nconst location = useLocation();\nconst key = null;\nconst [data] = useGetData(key, movieId)\nconst pathButton = location.state?.from ? location.state.from : \"/movies\";\nif(!data) return;\n    return  (\n        <PrimaryBox>\n            <GoBackButton pathButton={pathButton}/>\n            <DetailsBox data={data} state={{from: location.state?.from}}/>\n            <Outlet context={movieId}/>\n        </PrimaryBox>)\n}\n\nexport default MovieDetails;"],"names":["TextTitle","styled","Title","text","axios","requestConfig","params","api_key","language","getData","key","queryParams","response","data","message","useGetData","useState","setData","useEffect","then","PrimaryBox","SecondaryBox","Thumb","ThumbBox","AdditionalBox","Button","Link","GoBackButton","pathButton","to","DetailsBox","state","poster_path","title","vote_average","overview","genres","src","Placeholder","alt","width","height","style","marginBottom","Math","round","map","item","name","join","movieId","useParams","location","useLocation","from","context"],"sourceRoot":""}